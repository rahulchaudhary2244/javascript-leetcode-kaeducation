https://stackoverflow.com/questions/18200248/cloning-a-repo-from-someone-elses-github-and-pushing-it-to-a-repo-on-my-github

GitHub: git clone someone else's repository & git push to your own repository

I'm going to refer to someone else's repository as the other repository.

Create a new repository at github.com. (this is your repository)

Give it the same name as the other repository.
Don't initialize it with a README, .gitignore, or license.
Clone the other repository to your local machine. (if you haven't done so already)

> git clone https://github.com/kaeducation/LeetCode_JS_Classic.git
> Rename the local repository's current 'origin' to 'upstreamkaeducation'.

> git remote rename origin upstreamkaeducation
> Give the local repository an 'origin' that points to your repository.

> git remote add origin https://github.com/rahulchaudhary2244/javascript-leetcode-kaeducation.git
> Push the local repository to your repository on github.

> git push origin master

Now 'origin' points to your repository & 'upstreamkaeducation' points to the other repository.

Create a new branch for your changes with git checkout -b my-feature-branch.
You can git commit as usual to your repository.
Use git pull upstream master to pull changes from the other repository to your master branch.
